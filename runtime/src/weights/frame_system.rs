//! Autogenerated weights for frame_system
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-09-23, STEPS: `[20, ]`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/myriad
// benchmark
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=frame-system
// --extrinsic=*
// --steps=20
// --repeat=10
// --heap-pages=4096
// --raw
// --output=./runtime/src/weights/frame_system.rs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for frame_system.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> frame_system::WeightInfo for WeightInfo<T> {
	fn remark(_b: u32) -> Weight {
		3_555_000_u64
	}
	fn remark_with_event(b: u32) -> Weight {
		0_u64
			// Standard Error: 0
			.saturating_add(3_000_u64.saturating_mul(b as Weight))
	}
	fn set_heap_pages() -> Weight {
		3_000_000_u64.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn set_changes_trie_config() -> Weight {
		22_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	fn set_storage(i: u32) -> Weight {
		0_u64
			// Standard Error: 87_000
			.saturating_add(2_046_000_u64.saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().writes(1_u64.saturating_mul(i as Weight)))
	}
	fn kill_storage(i: u32) -> Weight {
		0_u64
			// Standard Error: 49_000
			.saturating_add(1_441_000_u64.saturating_mul(i as Weight))
			.saturating_add(T::DbWeight::get().writes(1_u64.saturating_mul(i as Weight)))
	}
	fn kill_prefix(p: u32) -> Weight {
		0_u64
			// Standard Error: 155_000
			.saturating_add(3_862_000_u64.saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().writes(1_u64.saturating_mul(p as Weight)))
	}
}
