name: Release-candidate automation

on:
  push:
    branches:
      - release-[0-9]+.[0-9]+.[0-9]+

concurrency:
  group: release-candidate-automation

jobs:
  compute-next-rc-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Compute next RC tag
        shell: bash
        run: |
          # Get last rc tag if exists, else set it to {version}-rc1
          version=${GITHUB_REF#refs/heads/release-}
          echo "$version"
          echo "::set-output name=version::$version"
          git tag -l
          last_rc=$(git tag -l "$version-rc*" | sort -V | tail -n 1)
          if [ -n "$last_rc" ]; then
            suffix=$(echo "$last_rc" | grep -Eo '[0-9]+$')
            echo $suffix
            ((suffix++))
            echo $suffix
            echo "::set-output name=new_tag::$version-rc$suffix"
            echo "::set-output name=first_rc::false"
          else
            echo "::set-output name=new_tag::$version-rc1"
            echo "::set-output name=first_rc::true"
          fi

  apply-rc-tag:
    runs-on: ubuntu-latest

    needs: ['compute-next-rc-tag']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Apply new tag
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ''
          custom_tag: ${{ needs.compute-next-rc-tag.outputs.new_tag }}

  build-and-publish-docker-image:
    runs-on: ubuntu-latest

    needs: ['apply-rc-tag']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: .maintain/docker/Dockerfile
          tags: |
            ${{ github.repository }}:latest-rc
            ${{ github.repository }}:${{ needs.apply-rc-tag.outputs.new_tag }}
          build-args: |
            VCS_REF=${{ steps.build-info.sha_short }}
            BUILD_DATE=${{ steps.build-info.date }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
