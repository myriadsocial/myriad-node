//! Autogenerated weights for pallet_assets
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-09-23, STEPS: `[20, ]`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/myriad
// benchmark
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_assets
// --extrinsic=*
// --steps=20
// --repeat=10
// --heap-pages=4096
// --raw
// --output=./runtime/src/weights/pallet_assets.rs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for pallet_assets.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_assets::WeightInfo for WeightInfo<T> {
	fn create() -> Weight {
		97_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn force_create() -> Weight {
		59_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn destroy(c: u32, s: u32, a: u32) -> Weight {
		0_u64
			// Standard Error: 6_887_000
			.saturating_add(222_411_000_u64.saturating_mul(c as Weight))
			// Standard Error: 6_887_000
			.saturating_add(143_542_000_u64.saturating_mul(s as Weight))
			// Standard Error: 68_870_000
			.saturating_add(196_023_000_u64.saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().reads(2_u64.saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().reads(2_u64.saturating_mul(s as Weight)))
			.saturating_add(T::DbWeight::get().reads(1_u64.saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64.saturating_mul(c as Weight)))
			.saturating_add(T::DbWeight::get().writes(2_u64.saturating_mul(s as Weight)))
			.saturating_add(T::DbWeight::get().writes(1_u64.saturating_mul(a as Weight)))
	}
	fn mint() -> Weight {
		135_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	fn burn() -> Weight {
		120_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	fn transfer() -> Weight {
		232_000_000_u64
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn transfer_keep_alive() -> Weight {
		162_000_000_u64
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn force_transfer() -> Weight {
		359_000_000_u64
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn freeze() -> Weight {
		168_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn thaw() -> Weight {
		147_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn freeze_asset() -> Weight {
		52_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn thaw_asset() -> Weight {
		113_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn transfer_ownership() -> Weight {
		150_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn set_team() -> Weight {
		159_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn set_metadata(n: u32, s: u32) -> Weight {
		146_672_000_u64
			// Standard Error: 363_000
			.saturating_add(472_000_u64.saturating_mul(n as Weight))
			// Standard Error: 363_000
			.saturating_add(515_000_u64.saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn clear_metadata() -> Weight {
		231_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn force_set_metadata(n: u32, s: u32) -> Weight {
		69_396_000_u64
			// Standard Error: 150_000
			.saturating_add(197_000_u64.saturating_mul(n as Weight))
			// Standard Error: 150_000
			.saturating_add(270_000_u64.saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn force_clear_metadata() -> Weight {
		115_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn force_asset_status() -> Weight {
		102_000_000_u64
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	fn approve_transfer() -> Weight {
		124_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	fn transfer_approved() -> Weight {
		528_000_000_u64
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	fn cancel_approval() -> Weight {
		487_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	fn force_cancel_approval() -> Weight {
		355_000_000_u64
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}
